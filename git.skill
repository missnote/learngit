配置GIT的用户信息
```
git config --global user.name ''
git config --global user.email ''
git config --global core.editor emacs || gvim
```

检查配置信息
```
git config --list
git config <key>
```

使用帮助
```
git help <verb>
git <verb> --help
man git-<verb>
git help config
```

初始化仓库
```
git init
git clone <url>
```

修改和提交
```
git status
git diff
git add -A -v
git add .
git add <file>
git mv <old> <new>
git rm <file>
git rm --cached <file>
git commit -m "message"
git commit --amend
```

忽略文件
```
.gitignore规则
空行#开头会被忽略
glob正则匹配
[abc],*,?[0-9],a/**/z
!取反

*.a
!lib.a
/TODO
build/
doc/*.*
doc/**/.*
```

查看历史
```
git log
git log -p -n
git log --stat
git log --pretty=oneline
git log --pretty=format:""
git log --graph
git log --abbrev-commit
git log --since,--after,--until,--before,--author,--grep,--committer
```

撤销操作
```
git commit --amend -m 'new message'
git reset HEAD <file>
git checkout -- <file>
git reset HEAD <file>
git reset HEAD^
git reset <hash>
git revert HEAD
```

远程仓库使用
```
git remote
git remote -v
git remote add <shortname> <url>
git fetch <remote-name>
git push [origin] [master]
git remote show [origin]
git remote rename <old> <new>
git remote rm <remote-name>
```

打标签
```
git tag
git tag -l "[v1***]"
git tag -a v1.1 -m"message"
git tag -a v1.1-lw
git tag -a v1.2 <hash>
git push origin v1.2
git push origin --tags
git tag -d v1.1
git push origin :refs/tags/v1.2
```

git别名
```
git config --global alias.co checkout
git config --global alias.last "log -1 HEAD"
```

GIT分支
```
git branch --no-ff <name>
git checkout -b <name>
git merge <name>
git branch -d <name>
git mergetool
git branch 
git branch -v
git branch --merged
git branch --no-merged
```

GIT远程分支
```
git ls-remote
git remote show [remote]
git fetch [origin]
git push [origin][branch]
git checkout --track origin/master
git branch -vv
git push origin --delete [name]
```

GIT变基操作
```
git rebase master
git rebase master server
git rebase --onto master server client
git pull --rebase
```
